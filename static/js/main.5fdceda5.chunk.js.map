{"version":3,"sources":["components/Variables.js","components/RightBlock.js","context.js","components/Fraction.js","components/Variable.js","App.js","reportWebVitals.js","index.js"],"names":["Variables","props","id","vars","map","variable","onClick","addNewVariable","RightBlock","name","class","Component","Context","React","createContext","Fraction","num","denom","useState","numerator","setNumerator","denominator","setDenominator","handleDenominatorChange","event","target","value","type","onChange","Math","abs","displayDenominator","Variable","deleteVariable","useContext","isAugmented","setIsAugmented","width","setWidth","height","setHeight","values","setValues","oldHeight","newHeight","console","log","newRows","i","push","concat","slice","oldWidth","newWidth","newColumns","row","elem","App","setVars","Provider","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fdceda5.chunk.js","sourcesContent":["import React from 'react'\nfunction Variables(props){\n    return (\n        <div id=\"variables\"> \n            <table>\n                {\n                    props.vars.map(variable => {\n                        return (\n                            <tr>\n                                <th> \n                                    {variable}\n                                </th>\n                            </tr>\n                        )\n                    })\n                }\n            </table>\n            <div id=\"addVariableButtonContainer\">\n                <button id=\"addVariableButton\" onClick={props.addNewVariable}>+</button> \n            </div>\n        </div>\n    )\n    \n}\n\nexport default Variables","import React, {Component} from 'react'\n\nclass RightBlock extends Component {\n    render(){\n        return (\n            <div id=\"rightBlock\">\n                <div id=\"input\">\n                    <form name=\"expressionField\">\n                        <input></input>\n                    </form>\n                    <div id=\"calculateButton\">\n                        <button>=</button>\n                    </div> \n                </div>\n                <div id=\"resultBlock\">\n                    <table>\n                        <tr>\n                            <th>\n                                <div class=\"fraction\">1/5</div>\n                            </th>\n                            <th>\n                                <div class=\"fraction\">42/5</div>\n                            </th>\n                            <th>\n                                <div class=\"fraction\">1/5</div>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <div class=\"fraction\">1/5</div>\n                            </th>\n                            <th>\n                                <div class=\"fraction\">42/5</div>\n                            </th>\n                            <th>\n                                <div class=\"fraction\">1/5</div>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <div class=\"fraction\">1/5</div>\n                            </th>\n                            <th>\n                                <div class=\"fraction\">42/5</div>\n                            </th>\n                            <th>\n                                <div class=\"fraction\">1/5</div>\n                            </th>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default RightBlock","import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context\n","import React from 'react'\n\nfunction Fraction({ num = 1, denom = 1 }) {\n\n    let [numerator, setNumerator] = React.useState(num)\n    let [denominator, setDenominator] = React.useState(denom)\n\n    function handleNumeratorChange(event) {\n        setNumerator(event.target.value);\n    }\n    function handleDenominatorChange(event) {\n        setDenominator(event.target.value);\n    }\n\n    function displayDenominator(){\n        if (Math.abs(denominator) !== 1){\n            return  (<div class=\"denominator\">\n                        <input type=\"text\" value={denominator} onChange={handleDenominatorChange} />\n                    </div>)\n        }\n    }\n\n    // TODO\n    // remove denominator when it equal to +-1\n    return (\n        <div class=\"fraction\">\n            <div class=\"numerator\">\n                <input type=\"text\" value={numerator} onChange={handleNumeratorChange} />\n            </div>\n            {displayDenominator()}\n        </div>\n    )\n\n}\n\nexport default Fraction","import React, { useContext } from 'react'\nimport Context from '../context'\nimport Fraction from './Fraction'\n\n\n\nfunction Variable(props) {\n\n    const { deleteVariable } = useContext(Context)\n    let [isAugmented, setIsAugmented] = React.useState(false)\n    let [width, setWidth] = React.useState(2)\n    let [height, setHeight] = React.useState(2)\n    let [values, setValues] = React.useState([\n            [<Fraction />, <Fraction />],\n            [<Fraction />, <Fraction />]\n    ])\n\n\n    function expandMatrix() {\n        setIsAugmented(true)\n    }\n\n    function reduceAugmentedMatrix() {\n        setIsAugmented(false)\n    }\n\n    function handleWidthChange(event) {\n    \n        let oldWidth = width\n        let newWidth = event.target.value\n        if (newWidth === \"\") return;\n        setValues(values => {\n            \n            if (newWidth > oldWidth){\n                let newColumns = []\n                for (let i = 0; i < newWidth-oldWidth; i++){\n                    newColumns.push(<Fraction />)\n                }\n                return values.map(row => row.concat(newColumns))\n            }\n            else{\n                return values.map(row => row.slice(0, newWidth))\n            }\n        })\n        setWidth(newWidth);\n    }\n\n    function handleHeightChange(event) {\n        let oldHeight = height\n        let newHeight = event.target.value\n        if (newHeight === \"\") return;\n        console.log(oldHeight, newHeight)\n        setValues(values => {\n            \n            if (newHeight > oldHeight){\n                let newRows = [[]]\n                for (let i = 0; i < width; i++){\n                    newRows[0].push(<Fraction />)\n                }\n                for (let i = 0; i < newHeight - oldHeight-1; i++){\n                    newRows.push(newRows[0])\n                }\n                return values.concat(newRows)\n            }\n            else{\n                return values.slice(0, newHeight)\n            }\n        })\n        setHeight(newHeight);\n    \n    }\n\n    return (\n\n        <div class=\"variable\" id={props.id} >\n            <div class=\"nameBlock\">\n                <span class=\"name\">X</span>\n                <sub class=\"size\">\n                    <span class=\"height\">\n                        <input type=\"text\" value={height} onChange={handleHeightChange}></input> \n                    </span>\n                    |\n                    <span class=\"width\">\n                        <input type=\"text\" value={width} onChange={handleWidthChange}></input> \n                    </span>\n                </sub>\n            </div>\n            <div class=\"equalSign\">=</div>\n            <div class=\"matrixBlock\">\n                <table>\n                    {\n                        values.map(row =>\n                            <tr>\n                                {row.map(elem => <th>{elem}</th>)}\n                            </tr>\n                        )\n                    }\n                </table>\n            </div>\n            <div class=\"augmentedZone\">\n                {\n                    isAugmented ? <>\n                        <div class=\"augmentedMatrixBlock\">\n                            <table>\n\n                                <tr>\n                                    <th>\n                                        <div class=\"fraction\">1/5</div>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th>\n                                        <div class=\"fraction\">1/5</div>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th>\n                                        <div class=\"fraction\">1/5</div>\n                                    </th>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class=\"reduceMatrixButtonContainer\">\n                            <button class=\"reduceMatrixButton\" onClick={reduceAugmentedMatrix}>x</button>\n                        </div>\n                    </>\n                        :\n                        <div class=\"augmentedButtonContainer\">\n                            <button class=\"augmentedButton\" onClick={expandMatrix}>x</button>\n                        </div>\n                }\n            </div>\n            <div class=\"deleteVariableButtonContainer\">\n                <button class=\"deleteVariableButton\" onClick={() => deleteVariable(props.id)}>x</button>\n            </div>\n        </div>\n    )\n\n}\nexport default Variable","import Variables from './components/Variables'\nimport RightBlock from './components/RightBlock'\nimport Variable from './components/Variable'\nimport './styles.css'\nimport Context from './context'\nimport React from 'react'\nfunction App() {\n\n  // TODO \n  // vars contains nil to maintain logic of state changin. That's look like bad practice\n  // ask to Vitay\n  const [vars, setVars] = React.useState([])\n\n\n\n  function addNewVariable() {\n    setVars(\n      (() => vars.concat([<Variable deleteVariable={deleteVariable} id={Date.now()} key={Date.now()} />]))()\n    )\n  }\n\n  function deleteVariable(id) {\n    setVars(\n      vars.map(variable => (variable?.props.id === id) ? null: variable)\n    )\n\n  }\n\n  return (\n    <Context.Provider value={{ deleteVariable }}>\n      <body>\n        <header>\n          <p>header</p>\n        </header>\n        <div id=\"main\">\n          <Variables vars={vars}\n            addNewVariable={addNewVariable} />\n          <RightBlock />\n        </div>\n        <footer>\n          <p>footer</p>\n        </footer>\n      </body>\n    </Context.Provider>\n  );\n\n\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}